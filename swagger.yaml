openapi : 3.0.0
info:
  title : Learn Express and swagger
  description : A course segment about writing docs
  version : 1.1.0
  contact:
    email: pavamandabeer@gmail.com
    url : "https://dpavaman.github.io/dev-portfolio/"


# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for local host - secure
#   - url: "http://localhost:4000/api/v1"
#     description: for local host - regular

servers:
  - url: "{protocol}://localhost:4000/api/{version}"
    description: for local host
    variables: 
      version: 
        enum:
          - v1
          - v2
        default: v1
      protocol: 
        enum:
          - http
          - https
        default : http


components: 
  securitySchemes:
    cookieAuth:
      type : apiKey
      in: cookie
      name : token
    BearerAuth:
      type : http
      scheme : bearer

paths:
  /lco:
    get:
      tags:
        - String
      summary: returns a greet message from LCO
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: string
                example: "myString"
        400:
          description: Bad request
        500:
          description: Internal server error

  /lco-object:
    get:
      tags:
        - Object
      summary : returns a course with id, name and price
      responses:
        200:
          description: All godd and Success
          content:
            application/json:
              schema:
                type : object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type : number
        400:
          description: bad request
        500:
          description: Internal server error

  /courses:
    get:
      tags:
        - Array
      summary : returns all courses
      responses:
        200:
          description: ALl good and success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id: 
                      type : string
                    name:
                      type : string
                    price:
                      type : number
        400:
          description: Bad request
        500:
          description: Internal server error

  /mycourse/{courseId}:
    get:
      tags:
        - String
      summary : return a specific course matching the id of request parameter
      parameters:
        - name: courseId
          in: path
          required : true
          default: 22
          schema: 
            type : string
      responses:
        200:
          description : All good and success
          content:
            application/json:
              schema:
                type : object
                properties:
                  id:
                    type : string
                  name:
                    type : string
                  price:
                    type : number
        400:
          description : Bad request
        500:
          description : Internal server error

  /addcourse:
    post:
      tags:
        - String
      summary : Adds a new course to existing courses
      consumes:
        - application/json
      produces:
        - application/json
      requestBody:
        required : true
        content:
          application/json:
            schema:
              type : object
              properties:
                id:
                  type : string
                name:
                  type : string
                price:
                  type : number
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type : boolean
        400:
          description: Bad request
        500:
          description : Internal server error

  /coursequery:
    get:
      tags:
        - String
      summary: trying to learn about query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [delhi, london, shorapur]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile]
      responses:
        200:
          description: All good and success
          content:
            application/json:
              schema:
                type: object
                properties:
                  location: 
                    type : string
                  device:
                    type: string
        400:
          description: Bad request
        500:
          description: Internal Server error


  /courseupload:
    post:
      tags:
        - String
      summary : Uploading course image
      parameters:
        - in: header
          name : auth
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format : binary
      responses:
        200:
          description: All good success
        400:
          description: Bad request
        500:
          description: Internal Server error